FROM ubuntu:20.04

LABEL maintainer="tkosht <takehito.oshita.business@gmail.com>"

ENV TZ Asia/Tokyo
ENV DEBIAN_FRONTEND=noninteractive

# ============================================================================ #
# install commands and libraries
# - expect just for using  unbuffer command

RUN apt-get update -y && apt-get upgrade -y \
    && apt-get install -y sudo build-essential autoconf jq \
        bash-completion vim tmux tzdata locales dialog git openssh-server \
        sqlite3 curl nodejs npm default-jre \
        libsnappy-dev \
        libmecab-dev mecab mecab-ipadic-utf8 mecab-utils \
        expect \
    && localedef -f UTF-8 -i ja_JP ja_JP.UTF-8



# for e2e test for frontend
ENV CHROME_BIN=/usr/bin/google-chrome
RUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
RUN dpkg -i google-chrome-stable_current_amd64.deb; apt-get -fy install

# for ssh connection
RUN mkdir /var/run/sshd
RUN echo "PubkeyAuthentication yes" >> /etc/ssh/sshd_config
RUN echo "AuthorizedKeysFile workspace/.ssh/authorized_keys" >> /etc/ssh/sshd_config

RUN npm update -g npm \
    && npm install -g npm-check-updates \
    && npm install -g @vue/cli || true      # ignore error exitted

# retry to install @vue/cli
RUN npm install -g @vue/cli || true
RUN npm install -g @vue/cli-init || true 

RUN apt-get install -y --no-install-recommends \
        python3-dev \
        python3-pip \
        python3-setuptools \
        python3-wheel

RUN ln -s /usr/bin/python3.8 /usr/bin/python \
    && ln -s /usr/bin/pdb3 /usr/bin/pdb

ENV LANG="ja_JP.UTF-8" \
    LANGUAGE="ja_JP:ja" \
    LC_ALL="ja_JP.UTF-8" \
    TZ="Asia/Tokyo" \
    TERM="xterm"

COPY ./requirements.txt /requirements.txt
RUN python -m pip install --upgrade pip \
    && python -m pip install -r /requirements.txt \
    && rm -f /requirements.txt

# RUN echo 'font.family : IPAexGothic' >> /SOMEWHERE/matplotlib/matplotlibrc

# ======================== #
# # Install for Tokenizers
WORKDIR /tmp

# MeCab
RUN git config --global http.postBuffer 1048576000 \
    && git clone https://github.com/neologd/mecab-ipadic-neologd.git \
    && cd mecab-ipadic-neologd && bin/install-mecab-ipadic-neologd -n -a -y \
    && pip install unidic-lite

# Sudachi
RUN pip install sudachidict_core sudachidict_small sudachidict_full


# ======================== #
# - upgrade and clean system
RUN apt-get upgrade -y \
    && apt-get autoremove -y \
    && apt-get clean -y
#    && rm -rf /var/lib/apt/lists/*


# ======================== #
ARG user_id=1000
ARG group_id=1000
ARG user_name
ARG group_name

RUN groupadd --gid $group_id $group_name
RUN useradd -s /bin/bash --uid $user_id \
    --gid $group_id -m $user_name
ARG home_dir=/home/$user_name
COPY rc $home_dir

RUN echo $user_name:$user_name | chpasswd
RUN echo $user_name ALL=\(root\) NOPASSWD:ALL \
    > /etc/sudoers.d/$user_name\
    && chmod 0440 /etc/sudoers.d/$user_name

RUN chown -R $user_name:$group_name $home_dir 
USER $user_name

# Switch back to dialog for any ad-hoc use of apt-get
ENV DEBIAN_FRONTEND=dialog
